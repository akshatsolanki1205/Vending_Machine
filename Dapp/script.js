const node = new ethers.providers.JsonRpcProvider(
  "https://eth-goerli.g.alchemy.com/v2/egwXND60n0FrmsIJKQOpiGkDWWPulEM8"
);
const contractaddr = "0xAE5D2df64ba8FFF00762E1DcdE3f652Fe1184b94";
const code = {
    "_format": "hh-sol-artifact-1",
    "contractName": "VendingMachine",
    "sourceName": "contracts/vending_machine.sol",
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "BuyDonuts",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "Eat",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "MyDonuts",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "Refill",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "donutsLeft",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address payable",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060196000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a57806100a56000396000f3fe6080604052600436106100705760003560e01c80637e4567661161004e5780637e456766146100d35780638da5cb5b146100fe578063c37402d214610129578063e10578421461014057610070565b806301e2b78a1461007557806328170bd6146100a05780633ccfd60b146100bc575b600080fd5b34801561008157600080fd5b5061008a610169565b6040516100979190610678565b60405180910390f35b6100ba60048036038101906100b591906106c4565b6101af565b005b3480156100c857600080fd5b506100d1610331565b005b3480156100df57600080fd5b506100e8610432565b6040516100f59190610678565b60405180910390f35b34801561010a57600080fd5b50610113610478565b6040516101209190610732565b60405180910390f35b34801561013557600080fd5b5061013e61049e565b005b34801561014c57600080fd5b50610167600480360381019061016291906106c4565b610586565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6611c37937e08000816101c2919061077c565b3411610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa90610833565b60405180910390fd5b806000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b9061089f565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d291906108bf565b92505081905550806000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103279190610915565b9250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610995565b60405180910390fd5b6000479050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561042e573d6000803e3d6000fd5b5050565b60008060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461052e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052590610a01565b60405180910390fd5b60196000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057d91906108bf565b92505081905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe9061089f565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106559190610915565b9250508190555050565b6000819050919050565b6106728161065f565b82525050565b600060208201905061068d6000830184610669565b92915050565b600080fd5b6106a18161065f565b81146106ac57600080fd5b50565b6000813590506106be81610698565b92915050565b6000602082840312156106da576106d9610693565b5b60006106e8848285016106af565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071c826106f1565b9050919050565b61072c81610711565b82525050565b60006020820190506107476000830184610723565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107878261065f565b91506107928361065f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156107cb576107ca61074d565b5b828202905092915050565b600082825260208201905092915050565b7f3120646f6e7574203d20302e3035206574686572730000000000000000000000600082015250565b600061081d6015836107d6565b9150610828826107e7565b602082019050919050565b6000602082019050818103600083015261084c81610810565b9050919050565b7f6e6f7420656e6f75676820646f6e757473000000000000000000000000000000600082015250565b60006108896011836107d6565b915061089482610853565b602082019050919050565b600060208201905081810360008301526108b88161087c565b9050919050565b60006108ca8261065f565b91506108d58361065f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561090a5761090961074d565b5b828201905092915050565b60006109208261065f565b915061092b8361065f565b92508282101561093e5761093d61074d565b5b828203905092915050565b7f6f6e6c79206f776e65722063616e207769746864726177000000000000000000600082015250565b600061097f6017836107d6565b915061098a82610949565b602082019050919050565b600060208201905081810360008301526109ae81610972565b9050919050565b7f6f6e6c79206f776e65722063616e20726566696c6c0000000000000000000000600082015250565b60006109eb6015836107d6565b91506109f6826109b5565b602082019050919050565b60006020820190508181036000830152610a1a816109de565b905091905056fea264697066735822122044d611330b3922d4fd2ade9f989f9ec114ffb2dbfd5bf6d750aef8c356d8e16c64736f6c63430008090033",
    "deployedBytecode": "0x6080604052600436106100705760003560e01c80637e4567661161004e5780637e456766146100d35780638da5cb5b146100fe578063c37402d214610129578063e10578421461014057610070565b806301e2b78a1461007557806328170bd6146100a05780633ccfd60b146100bc575b600080fd5b34801561008157600080fd5b5061008a610169565b6040516100979190610678565b60405180910390f35b6100ba60048036038101906100b591906106c4565b6101af565b005b3480156100c857600080fd5b506100d1610331565b005b3480156100df57600080fd5b506100e8610432565b6040516100f59190610678565b60405180910390f35b34801561010a57600080fd5b50610113610478565b6040516101209190610732565b60405180910390f35b34801561013557600080fd5b5061013e61049e565b005b34801561014c57600080fd5b50610167600480360381019061016291906106c4565b610586565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6611c37937e08000816101c2919061077c565b3411610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa90610833565b60405180910390fd5b806000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b9061089f565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d291906108bf565b92505081905550806000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103279190610915565b9250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b890610995565b60405180910390fd5b6000479050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561042e573d6000803e3d6000fd5b5050565b60008060003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461052e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052590610a01565b60405180910390fd5b60196000803073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057d91906108bf565b92505081905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe9061089f565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106559190610915565b9250508190555050565b6000819050919050565b6106728161065f565b82525050565b600060208201905061068d6000830184610669565b92915050565b600080fd5b6106a18161065f565b81146106ac57600080fd5b50565b6000813590506106be81610698565b92915050565b6000602082840312156106da576106d9610693565b5b60006106e8848285016106af565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061071c826106f1565b9050919050565b61072c81610711565b82525050565b60006020820190506107476000830184610723565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107878261065f565b91506107928361065f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156107cb576107ca61074d565b5b828202905092915050565b600082825260208201905092915050565b7f3120646f6e7574203d20302e3035206574686572730000000000000000000000600082015250565b600061081d6015836107d6565b9150610828826107e7565b602082019050919050565b6000602082019050818103600083015261084c81610810565b9050919050565b7f6e6f7420656e6f75676820646f6e757473000000000000000000000000000000600082015250565b60006108896011836107d6565b915061089482610853565b602082019050919050565b600060208201905081810360008301526108b88161087c565b9050919050565b60006108ca8261065f565b91506108d58361065f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561090a5761090961074d565b5b828201905092915050565b60006109208261065f565b915061092b8361065f565b92508282101561093e5761093d61074d565b5b828203905092915050565b7f6f6e6c79206f776e65722063616e207769746864726177000000000000000000600082015250565b600061097f6017836107d6565b915061098a82610949565b602082019050919050565b600060208201905081810360008301526109ae81610972565b9050919050565b7f6f6e6c79206f776e65722063616e20726566696c6c0000000000000000000000600082015250565b60006109eb6015836107d6565b91506109f6826109b5565b602082019050919050565b60006020820190508181036000830152610a1a816109de565b905091905056fea264697066735822122044d611330b3922d4fd2ade9f989f9ec114ffb2dbfd5bf6d750aef8c356d8e16c64736f6c63430008090033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  

const ABI = code.abi;

let main = async () => {
  //connecting metamask
  const provider = new ethers.providers.Web3Provider(window.ethereum, "any");
  await provider.send("eth_requestAccounts", []);
  const signer = provider.getSigner();

  // instance of contract
  const contract = new ethers.Contract(contractaddr, ABI, signer);
  const contract2 = contract.connect(signer);
  return contract2;
};

let buy = async () => {
  const contract2 = await main();
  const amount = document.querySelectorAll("input")[0].value;
  const price = document.querySelectorAll("input")[1].value;

  await contract2.BuyDonuts(amount, { value: ethers.utils.parseEther(price) });
  console.log(bal);
};

async function how() {
  const contract2 = await main();
  donuts = await contract2.MyDonuts();
  document.querySelectorAll("span")[0].innerHTML = "🍩" + donuts;
}

let eat = async () => {
  const contract = await main();
  const pieces = document.querySelectorAll("input")[2].value;
  await contract.Eat(pieces);
};

let left = async () => {
  const contract = await main();
  const l = await contract.donutsLeft();
  document.querySelectorAll("span")[1].innerHTML = "🍩" + l;
};

let refl = async () => {
  const contract = await main();
  try {
    await contract.Refill();
  } catch (error) {
    console.log("Only Owner is allowed to refill vending machine");
  }
};

let withd = async () => {
  const contract = await main();
  try {
    await contract.withdraw();
  } catch(error) {
    console.log(error);
    document.querySelector("#im").src = "images/fbi-open.gif";
    alert("Only owner can withdraw his money");
  }
};
